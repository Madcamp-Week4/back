#define _CRT_SECURE_NO_WARNINGS
#pragma warning(disable: 4996)
#include <stdio.h>

int main(void)
{

	getchar();
	system("pause");
	return 0;
}


1. scanf 함수 오류 해결하기

#define _CRT_SECURE_NO_WARNINGS
맨 위에

2. exe 파일 계산 안됨 문제 해결하기

system("pause");
return 0; 전에

3. exe 파일 꺼짐 문제 해결하기

getchar();
return 0; 전에

4. 분수 계산하는 법

분수에 .0 붙여서 실수 간의 계산으로 만들기
변수에 (double) 붙여서 실수 간의 계산으로 만들기

정수에 대한 나누기 계산자체가 문제가 있는건 아닙니다.
2/3이 아닌 2000/3이었다면 제대로 666이라고 나왔을겁니다.
문제는 정수와 정수의 사칙연산의 결과값은 역시 정수로 계산된다는것입니다.
그리고 정수로 계산되면서 소수점이하의 값은 버림하게 됩니다.(엄밀히 말하면 계산자체가 정수로 계산되는것이라 소수점이하는 나오지 않습니다만..)
즉 2/3을 실수변수'n'에 대입되더라도 그 이전에 이미 정수로 변환. 소수점 아래는 버림되기 때문에 0이 대입되게 되는겁니다.
해결방법은 이게 정수계산이 아니라 실수계산이란걸 명시해주면 됩니다. 상수를 사용시, 정수라도 .0 이나 .0f를 붙여 실수로 처리하라라고 명시하면 됩니다. 2.0/3.0 이나 2.0f/3.0f처럼
혹 계산에 사용되는 값이 변수라면 이 역시 실수로 변환해서 사용하시면 됩니다. 즉
int iA = 2;
int iB = 3;
float fC = ((float)iA) / ((float)iB);
이런식으로

5. exe를 쓰기용으로 열 수 없습니다
명령 프롬프트 확실히 끄기
visual studio 껐다 켜기

6. 초기화되지 않은 지역 변수를 사용하였습니다
scanf &붙이기

7. 키 먹힐 때
ins 키 누르기(numlock)

8. for문 개수가 이상하게 나올 때
for 뒤에 ; 빼기

9. EOF=End Of File: 파일의 끝을 표현하기 위해 정의해 놓은 함수
최대 몇 개의 입력이 들어오는지 모르는 문제에서 사용

#include <stdio.h>
int main(void)
{
	int A, B;
	while(scanf("%d %d", &A, &B) != EOF)
		printf("%d\n", A + B);
	return 0;
}

10.
call-by-value: 값이 복사되어 넘어감
call-by-reference: 주소값이 넘어감 -> 주소값이 같기 때문에 값이 공유됨, 간접참조

11. strlen 시간초과 오류
len=strlen(S);
변수 저장한 뒤 for문 안에 len 사용
=> for문 한 번 실행시마다 strlen 함수 실행 시 시간초과

12. 이중 for문 빠저나오는 방법
1) if() break; for문 각각 마지막 부분에 사용
2) 첫번째 for문의 변수로 if문 처리
3) goto문 사용


13. 동적 할당
//아래의 헤더파일중 하나만 써도 됩니다.
#include <malloc.h> 
#include <stdlib.h>
//혹은 최신버전의 비주얼스튜디오는
#include <stdio.h> // 여기에 선언되어 있습니다.

14. 문제 요구 조건 확인하기 -> 테스트케이스 찾아서 넣어보자
1) 숫자 잘 썼는지 확인
2) 초기조건 n = 1, n = 2 출력값 확인
3) 마지막 조건 출력값 확인

15. for문 범위 확인하기
< vs <=

16. 숫자가 커진다면 int 대신 long long 사용